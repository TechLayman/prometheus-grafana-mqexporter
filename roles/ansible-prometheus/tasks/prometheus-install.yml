---
- name: "Create prometheus service group"
  group:
    name: "{{ prometheus_group }}"
    state: present

- name: "Create prometheus service account"
  user:
    name: "{{ prometheus_user }}"
    group: "{{Â prometheus_group }}"
    createhome: no
    shell: "/sbin/nologin"
    comment: "prometheus service account"
    state: present

- name: "download prometheus binaries"
  get_url:
    url: "{{ prometheus_download_url }}"
    dest: "/tmp"
  retries: 5
  delay: 10
  when: prometheus_tar_status.stat.exists == false

- name: "Create prometheus directories"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "u=rwx,g=rx,o=rx"
  with_items:
    - "{{ prometheus_install_path }}"
    - "{{ prometheus_install_path }}/bin"
    - "{{ prometheus_install_path }}/config"
    - "{{ prometheus_install_path }}/rules"
    - "{{ prometheus_install_path }}/log"
    - "{{ prometheus_install_path }}/data"

- name: "expand prometheus binaries"
  unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "/tmp"
    remote_src: yes

- name: "copy binaries to actual prometheus home location"
  copy: 
    src: "{{ item.src }}" 
    remote_src: yes    
    dest: "{{ item.dest }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
  with_items:
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus', dest: '{{ prometheus_install_path }}/bin' }
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/promtool', dest: '{{ prometheus_install_path }}/bin' }
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus.yml', dest: '{{ prometheus_install_path }}/config/prometheus.yml_original' }
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/NOTICE', dest: '{{ prometheus_install_path }}' }
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/LICENSE', dest: '{{ prometheus_install_path }}' }
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/console_libraries', dest: '{{ prometheus_install_path }}' }
    - { src: '/tmp/prometheus-{{ prometheus_version }}.linux-amd64/consoles', dest: '{{ prometheus_install_path }}' }
    
- name: "copying prometheus configuration file"
  copy:
    src: "{{ prometheus_config_user_template }}"
    dest: "{{ prometheus_install_path }}/config/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "u=rwx,g=rx,o=rx"
  
- name: "Copying MQ Alert rules files"
  copy:
    src: "{{ mq_alertrules }}"
    dest: "{{ prometheus_install_path }}/config/mq_alertrules.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "u=rwx,g=rx,o=rx"
 
- name: "creating prometheus service"
  template:
    src: "prometheus_service_template.yml.j2"
    dest: "/etc/systemd/system/{{ prometheus_service_name }}.service"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "u=rwx,g=r,o=r"


- name: "reloading systemd daemon"
  shell: "systemctl daemon-reload"
  notify:
    - "start {{ prometheus_service_name }}"

#- name: "cleaning up prometheus temp files"
#  file:
#    path: "{{ item }}"
#    state: absent
#  with_items:
#    - "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
#    - "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"
