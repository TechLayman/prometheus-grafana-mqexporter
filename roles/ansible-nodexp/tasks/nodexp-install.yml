---
- name: "create nodexp service group"
  group:
    name: "{{ nodexp_group }}"
    state: present

- name: "create nodexp service account"
  user:
    name: "{{ nodexp_user }}"
    group: "{{Â nodexp_group }}"
    createhome: no
    shell: "/sbin/nologin"
    comment: "nodexp service account"
    state: present

- name: "create nodexp directories"
  file:
    path: "{{ nodexp_install_path }}"
    state: directory
    owner: "{{ nodexp_user }}"
    group: "{{ nodexp_group }}"
    mode: "u=rwx,g=rx,o=rx"

- name: "download nodexp binaries"
  get_url:
    url: "{{ nodexp_download_url }}"
    dest: "/tmp"
  retries: 2 
  delay: 10
  when: nodexp_tar_status.stat.exists == false

- name: "expand nodexp binaries"
  unarchive:
    src: "/tmp/node_exporter-{{ nodexp_version }}.linux-amd64.tar.gz"
    remote_src: yes
    dest: "{{ nodexp_install_path }}"
    owner: "{{ nodexp_user }}"
    group: "{{ nodexp_group }}"
    mode: "u=rwx,g=rx,o=r"
    extra_opts: [--strip-components=1]

- name: "Creating nodexp service"
  template:
    src: "nodexp_service_template.yml.j2"
    dest: "/etc/systemd/system/{{ nodexp_service_name }}.service"
    owner: "{{ nodexp_user }}"
    group: "{{ nodexp_group }}"
    mode: "u=rwx,g=rx,o=r"

- name: "Reloading systemd daemon"
  shell: "systemctl daemon-reload"
  notify:
    - "start {{ nodexp_service_name }}"

#- name: "cleaning up nodexp temp files"
#  file:
#    path: "/tmp/node_exporter-{{ nodexp_version }}.linux-amd64.tar.gz"
#    state: absent

